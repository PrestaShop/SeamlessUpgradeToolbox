# Base version of prestashop
# Ex: 1.7.8.9, 8.0.0, 8.1.5
BASE_VERSION=8.0.3
# Destination version of prestashop
# Ex: 1.7.8.9, 8.0.0, 8.1.5
UPGRADE_VERSION=8.1.0

# If the target version is under development, set to true for build this version
UPGRADE_DEVELOPMENT_VERSION=false
# Target branch for build (release name is UPGRADE_VERSION).
# UPGRADE_DEVELOPMENT_VERSION must be true for this to be taken into account.
# Ex: develop, 8.1.x, 8.0.x
UPGRADE_DEVELOPMENT_BRANCH=develop

# Configuring the autoupgrade module repository
AUTOUPGRADE_GIT_REPO=https://github.com/PrestaShop/autoupgrade.git
AUTOUPGRADE_GIT_BRANCH=dev

# Upgrade all versions between BASE_VERSION and UPGRADE_VERSION
RECURSIVE_MODE=false

# Create a database dump after the upgrade, Create a database dump on another UPGRADE_VERSION fresh store,
# and compare dumps with git diff (NOT WORK WITH RECURSIVE_MODE)
CREATE_AND_COMPARE_DUMP_WITH_FRESH_INSTALL=false

# Create a list with MD5 hash for all files after the upgrade, Create another listing in UPGRADE_VERSION fresh store,
# and compare results (NOT WORK WITH RECURSIVE_MODE)
# WARNING: it can take between 10 and 15min
CREATE_AND_COMPARE_FILES_WITH_FRESH_INSTALL=false

# If active, modules will be deleted before the upgrade process, only install database step will be executed
PERFORM_ONLY_CORE_DATABASE_UPGRADE=false

# BO location
ADMIN_DIR=admin1234
# login informations
BO_EMAIL=demo@prestashop.com
BO_PASSWORD=toto1234

# Basic configuration present in the module
PS_AUTOUP_PERFORMANCE=1
PS_AUTOUP_CUSTOM_MOD_DESACT=1
PS_AUTOUP_UPDATE_DEFAULT_THEME=1
PS_AUTOUP_CHANGE_DEFAULT_THEME=0
PS_AUTOUP_UPDATE_RTL_FILES=1
PS_AUTOUP_KEEP_MAILS=0
PS_AUTOUP_BACKUP=0
PS_AUTOUP_KEEP_IMAGES=1
PS_DISABLE_OVERRIDES=1

# Docker image variables
DOCKER_USER_ID=1000
DOCKER_GROUP_ID=1000
NODE_VERSION=16.20.1
PRESTASHOP_WORK_BASE_VERSION=7.4-fpm
PRESTASHOP_RUN_VERSION=7.4-apache
MYSQL_ROOT_PASSWORD=MyEpicPassword
